---
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';

// Obtener el contenido del partido (este paso depende de cómo estás manejando el fetch en tu proyecto)
const { blok } = Astro.props;

// Formatear la fecha
function formatDate(date: string) {
  const options: Intl.DateTimeFormatOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true };
  return new Date(date).toLocaleDateString('es-MX', options);
}
---

<div class="flex flex-col items-center text-center bg-cover bg-center bg-[url('/src/images/partido-bg.jpg')] p-4 rounded-lg shadow-lg text-white">  
  <div class="flex items-center justify-around w-full mb-4">
    <!-- Equipo 1 -->
    <div class="flex flex-col items-center">
      <img src={blok.Logo_local.filename} alt={blok.Nombre_local} class="w-16 h-16" />
      <p class="text-xl font-semibold">{blok.Nombre_local}</p>
    </div>

    <p class="text-2xl font-bold mx-4">vs</p>

    <!-- Equipo 2 -->
    <div class="flex flex-col items-center">
      <img src={blok.Logo_visitante.filename} alt={blok.Nombre_visitante} class="w-16 h-16" />
      <p class="text-xl font-semibold">{blok.Nombre_visitante}</p>
    </div>
  </div>

  <!-- Lugar -->
  <p class="text-lg mb-2">Lugar: {blok.Lugar_partido}</p>

  <!-- Fecha -->
  <p class="text-lg mb-4">Fecha: {formatDate(blok.Fecha_partido)}</p>

  <!-- Botón de Enlace -->
  <a href={blok.Enlace_en_vivo.url} class="inline-block bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-full">
    En vivo aquí
  </a>
</div>
